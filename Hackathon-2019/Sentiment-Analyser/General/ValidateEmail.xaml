<Activity mc:Ignorable="sap sap2010" x:Class="ValidateEmail" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_InputFileName" Type="InArgument(x:String)" />
    <x:Property Name="in_AttachmentLocation" Type="InArgument(x:String)" />
    <x:Property Name="in_VendorMail" Type="InArgument(snm:MailMessage)" />
    <x:Property Name="out_IsMailValid" Type="OutArgument(x:Boolean)" />
    <x:Property Name="in_Receipient" Type="InArgument(x:String)" />
    <x:Property Name="in_MailNotApprovedSub" Type="InArgument(x:String)" />
    <x:Property Name="in_MailNotApprovedbody" Type="InArgument(x:String)" />
    <x:Property Name="in_MailNotValidAttachSub" Type="InArgument(x:String)" />
    <x:Property Name="in_MailNotValidAttachBody" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1695,2432</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ValidateEmail_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="22">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ValidateEmail" sap:VirtualizedContainerService.HintSize="1675,2372" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="fileNameOnly" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1633,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Started checking attachment&quot;]" />
    <Assign sap:VirtualizedContainerService.HintSize="1633,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[fileNameOnly]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_InputFileName.Replace(".xlsx","")]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[not (in_VendorMail.Attachments.Any(Function(a) a.Name.ToLower.Contains(fileNameOnly.ToLower )))]" sap:VirtualizedContainerService.HintSize="1633,2049" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,310" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;No valid attachment found&quot;]" />
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendEmail workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" Timeout="{x:Null}" UnSafe="False" WorkflowFileName="General\SendEmail.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_ListAttachment" />
              <InArgument x:TypeArguments="x:String" x:Key="in_CCRecepient" />
              <InArgument x:TypeArguments="x:String" x:Key="in_Subject">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_MailNotValidAttachSub">
                  <mva:VisualBasicValue.Result>
                    <OutArgument x:TypeArguments="x:String" />
                  </mva:VisualBasicValue.Result>
                </mva:VisualBasicValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Body">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_MailNotValidAttachBody">
                  <mva:VisualBasicValue.Result>
                    <OutArgument x:TypeArguments="x:String" />
                  </mva:VisualBasicValue.Result>
                </mva:VisualBasicValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Recepient">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Receipient">
                  <mva:VisualBasicValue.Result>
                    <OutArgument x:TypeArguments="x:String" />
                  </mva:VisualBasicValue.Result>
                </mva:VisualBasicValue>
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Then>
      <If.Else>
        <If Condition="[not in_VendorMail.Body.ToUpper.Contains(&quot;APPROVED&quot;)]" DisplayName="If body contains Approved" sap:VirtualizedContainerService.HintSize="1212,1901" sap2010:WorkflowViewState.IdRef="If_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="376,310" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Found email is not approved&quot;]" />
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendEmail workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" Timeout="{x:Null}" UnSafe="False" WorkflowFileName="General\SendEmail.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_ListAttachment" />
                  <InArgument x:TypeArguments="x:String" x:Key="in_CCRecepient" />
                  <InArgument x:TypeArguments="x:String" x:Key="in_Subject">
                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_MailNotApprovedSub">
                      <mva:VisualBasicValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </mva:VisualBasicValue.Result>
                    </mva:VisualBasicValue>
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Body">
                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_MailNotApprovedbody">
                      <mva:VisualBasicValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </mva:VisualBasicValue.Result>
                    </mva:VisualBasicValue>
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Recepient">
                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Receipient">
                      <mva:VisualBasicValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </mva:VisualBasicValue.Result>
                    </mva:VisualBasicValue>
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="791,1753" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <Sequence.Variables>
                <Variable x:TypeArguments="ui:GenericValue" Name="counter" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="749,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="ui:GenericValue">[counter]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="ui:GenericValue">[1]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ForEach x:TypeArguments="snm:Attachment" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="749,1561" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[in_VendorMail.Attachments]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="snm:Attachment">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="snm:Attachment" Name="attach" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="713,1427" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="si:Stream" Name="Attstream" />
                        <Variable x:TypeArguments="x:Boolean" Name="folderexists" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[Path.GetExtension(attach.Name)=&quot;.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="671,1335" sap2010:WorkflowViewState.IdRef="If_6">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="526,1187" sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="si:FileStream" Name="fileStream" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                              <Assign.To>
                                <OutArgument x:TypeArguments="si:Stream">[Attstream]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="si:Stream">[attach.ContentStream]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:PathExists DisplayName="Path exists" Exists="[folderexists]" sap:VirtualizedContainerService.HintSize="484,89" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[in_AttachmentLocation]" PathType="Folder" />
                            <If Condition="[folderexists]" sap:VirtualizedContainerService.HintSize="484,232" sap2010:WorkflowViewState.IdRef="If_5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Else>
                                <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create directory" sap:VirtualizedContainerService.HintSize="334,84" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[in_AttachmentLocation]" />
                              </If.Else>
                            </If>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[attach.Name]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[attach.Name.Replace(".xlsx", DateTimeOffset.UtcNow.ToUnixTimeSeconds().ToString()+ ".xlsx")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                              <Assign.To>
                                <OutArgument x:TypeArguments="si:FileStream">[fileStream]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="si:FileStream">[File.Create(in_AttachmentLocation +"\"+ attach.Name)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                              <Assign.To>
                                <OutArgument x:TypeArguments="ui:GenericValue">[counter]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="ui:GenericValue">[counter+1]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                            <InvokeMethod DisplayName="Invoke method" sap:VirtualizedContainerService.HintSize="484,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="CopyTo">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="si:Stream">[Attstream]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="si:Stream">[fileStream]</InArgument>
                            </InvokeMethod>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[out_IsMailValid]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </Sequence>
          </If.Else>
        </If>
      </If.Else>
    </If>
  </Sequence>
</Activity>